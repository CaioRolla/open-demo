name: "wish-app-deploy"

# on:
#   workflow_run:
#     workflows: ["run-tests"]
#     branches: [ main ]
#     types:
#       - completed

# on:
#   push:
#     paths:
#       - 'apps/wish-app/**'
#       - 'libs/shared-app/**'
#       - 'libs/shared/**'
#       - 'libs/+auth/**'
#       - 'libs/wish-app/**'
#       - 'libs/wish-shared/**'
#       - '.github/workflows/wish-app-deploy.yml'
#       - 'angular.json'
#       - 'package.json'
#     branches:
#       - main

on: 
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ahmadnassri/action-workflow-run-wait@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: wish-app
          IMAGE_TAG: ${{ github.sha }}
          DOCKERFILE_PATH: ./apps/wish-app/Dockerfile
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f $DOCKERFILE_PATH .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition wish-app-task-definition --query taskDefinition > task-definition.json


      - name: Fill in the new image ID in the Amazon ECS task definition
        id: taskdef
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: wish-app-container
          image: ${{ steps.build-image.outputs.image }}
      
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.taskdef.outputs.task-definition }}
          service: wish-app-service
          cluster: rolla-cluster
          wait-for-service-stability: true